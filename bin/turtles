#!/usr/bin/env ruby
$:.unshift(File.expand_path("../../lib", __FILE__))

def show_usage
  puts "Usage: turtles <command>"
  puts
  puts "Commands:"
  puts "  prepare"
  puts "  config"
  puts "  stemcells"
  puts "  deploy-bosh [keyfile] [keyname]"
  puts "  deploy-cf"
  puts "  ip <service>"
end

if ARGV.length < 1
  show_usage
  exit
end

case ARGV[0]
when "prepare"
  puts "Preparing turtles environment..."
  exec File.expand_path("../../scripts/prepare.sh", __FILE__)

when "config"
  exec "cd #{File.expand_path("../..", __FILE__)} && rake config"

when "stemcells"
  puts "Building and uploading stemcells to swift..."
  exec "cd #{File.expand_path("../..", __FILE__)} && rake micro_stemcell"
  exec "cd #{File.expand_path("../..", __FILE__)} && rake stemcell"
  exec "cd #{File.expand_path("../..", __FILE__)} && rake upload_stemcells"

when "deploy-bosh"
  # TODO: stemcell arguments
  puts "Deploying BOSH..."
  keyfile = ARGV[1]
  keyname = ARGV[2] or "bosh-#{Time.now.hash.to_s(16)[-6,6]}"
  exec "cd #{File.expand_path("../..", __FILE__)} && rake download_stemcells"
  cmd = "cd #{File.expand_path("../..", __FILE__)} && rake micro_bosh_deploy"
  cmd << " KEYFILE=#{keyfile}" if keyfile
  cmd << " KEYNAME=#{keyname}" if keyfile # only if keyfile was specified
  exec cmd

when "deploy-cf"
  puts "Deploying Cloud Foundry..."

when "ip"
  require 'turtles'
  puts Turtles::NamedIP.get_ip(ARGV[1])

else
  puts "Invalid command."
  show_usage
end
